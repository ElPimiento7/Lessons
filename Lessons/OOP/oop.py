"""
 ООП - Это парадигма, которая оперирует объектами и основа её это объекты и взаимодействие между ними.
 ООП - Нужно для того, когда не хватает встроенных типов для описания какой-то сущности. Разное состояние.
 Объект - сущность, объединяющая данные и методы для работы с ними (состояние и поведение).
 Класс - это новый тип данных (типа int, string...). Объект, его представитель.
 У любого объекта есть id, значение и тип.
 Класс пишется с большой буквы (Cat). Объекты с маленькой буквы (cat).
 Чертеж = класс (схема того как объект будет выглядеть), Дом = объект (конкретная реализация).

 Метод - это функция, которая принадлежит классу.
 Магический метод, dunder (double underscore __) __init__.
 Self - ссылка на конкретный объект, которому присваиваются какие-то атрибуты или для которого вызывается конкретный метод.
"""


class Cat:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def meow(self):
        print(f"{self.name} says: Meow")

    def __add__(self, other):  # +
        if isinstance(other, Cat):
            return Cat("Ginger", 0)


if __name__ == '__main__':
    tom = Cat("Tom", 2)
    angela = Cat("Angela", 1)
    print(tom)
    print(angela)
    tom.meow()
    angela.meow()
    ginger = tom + angela
    ginger.meow()
