name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default:
        type: choice
        options:
          - regression_tests
          - smoke_tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.1"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable

  download-artifacts:
    runs-on: ubuntu-latest
    name: Download artifacts
    needs: setup
    steps:
      - name: Download Artifact ID
        run: |
          ARTIFACT_ID=$(curl -sSL \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/ElPimiento7/Lessons/actions/artifacts?name=allure-results" \
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          echo "Artifact ID: $ARTIFACT_ID"
      - name: Download Artifacts ZIP
        run: |
          curl -sSL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/ElPimiento7/Lessons/actions/artifacts/$ARTIFACT_ID/zip" \
          -o artifacts.zip
      - name: Extract Artifacts
        run: unzip -q artifacts.zip -d allure-results

  test:
    runs-on: ubuntu-latest
    name: Run tests
    needs: [setup, download-artifacts]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.1"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Tests
        run: |
          if [ "${{ github.event.inputs.deployment_target }}" == "regression_tests" ]; then
            pytest -v -m "regression" --alluredir=allure-results
          elif [ "${{ github.event.inputs.deployment_target }}" == "smoke_tests" ]; then
            pytest -v -m "smoke" --alluredir=allure-results
          fi

  generate-report:
    runs-on: ubuntu-latest
    name: Generate report
    needs: test
    steps: 
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: |
          sudo wget -q https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz && \
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/ && \
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure
      - name: Generate Allure report
        run: allure generate -c allure-results -o _site

  publish-report:
    runs-on: ubuntu-latest
    name: Publish report
    needs: generate-report
    steps:
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4.0.5
